{"version":3,"sources":["components/Timer.js","hooks/useAccurateInterval.js","components/TimerLengthControls.js","App.js","index.js"],"names":["Timer","sessionLength","breakLength","isTimerRunning","setIsTimerRunning","handleReset","useState","timeLeft","setTimeLeft","label","setLabel","minutesLabel","setMinutesLabel","beepSound","useRef","timer","fn","interval","isRunning","setIsRunning","savedCallback","timeout","expected","start","stop","useEffect","current","Date","now","setTimeout","tick","drift","Math","max","clearTimeout","useAccurateInterval","clockify","time","minutes","floor","seconds","formatForPreecidingZero","number","useLayoutEffect","play","className","id","onClick","pause","currentTime","ref","src","TimerLengthControls","props","handleDecrement","handleIncrement","App","setBreakLength","setSessionLength","changeLength","elId","includes","e","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89d61ff5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useLayoutEffect } from 'react'\nimport { FaPause, FaPlay, FaUndo } from 'react-icons/fa'\n\nimport { useAccurateInterval } from '../hooks/useAccurateInterval'\n\nexport const Timer = ({ sessionLength = 25, breakLength = 5, isTimerRunning, setIsTimerRunning, handleReset }) => {\n  const [ timeLeft, setTimeLeft ] = useState(sessionLength * 60) // 25 minutes\n  const [ label, setLabel ] = useState('Session')\n  const [ minutesLabel, setMinutesLabel ] = useState()\n\n  const beepSound = useRef(null)\n  \n  const { timer } = useAccurateInterval(() => setTimeLeft(timeLeft - 1))\n\n  useLayoutEffect(() => {\n    if(isTimerRunning) return\n\n    if(label === 'Session') {\n      setTimeLeft(sessionLength * 60)\n      setMinutesLabel(clockify(sessionLength * 60))\n    } else if(label === 'Break') {\n      setTimeLeft(breakLength * 60)\n      setMinutesLabel(clockify(breakLength * 60))\n    }\n  }, [sessionLength, breakLength])\n\n  function handleStartStop() {\n    if(isTimerRunning) {\n      stopTimer()\n    } else {\n      startTimer()\n    }\n  }\n\n  function reset() {\n    timer.stop()\n    setLabel('Session')\n    setTimeLeft(sessionLength * 60)\n    beepSound.current.pause()\n    beepSound.current.currentTime = 0\n    handleReset()\n  }\n\n  useEffect(() => {\n    setMinutesLabel(clockify())\n\n    if(timeLeft < 0) {\n      beepSound.current.play()\n\n      if(label === 'Session') {\n        setTimeLeft(breakLength * 60)\n        setLabel('Break')\n      } else if(label === 'Break') {\n        setTimeLeft(sessionLength * 60)\n        setLabel('Session')\n      }\n    }\n  }, [timeLeft])\n\n  function clockify(time = timeLeft) {\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n\n    function formatForPreecidingZero(number) {\n      return (number < 10) ? `0${number}` : number\n    }\n\n    return `${formatForPreecidingZero(minutes)}:${formatForPreecidingZero(seconds)}`\n  }\n\n  function startTimer() {\n    timer.start()\n    setIsTimerRunning(true)\n  }\n\n  function stopTimer() {\n    timer.stop()\n    setIsTimerRunning(false)\n  }\n  \n  return (\n    <section className=\"timer\">\n      <div className=\"timer-display\">\n        <h2 id=\"timer-label\">{label}</h2>\n        <p id=\"time-left\">{minutesLabel}</p>\n      </div>\n      <div className=\"timer-controls\">\n        <button id=\"start_stop\" onClick={handleStartStop}>\n          <i>\n            { isTimerRunning ? <FaPause /> : <FaPlay />}\n          </i>\n        </button>\n        <button id=\"reset\" onClick={reset}>\n          <i><FaUndo /></i>\n        </button>\n      </div>\n      <audio ref={beepSound} id=\"beep\" src=\"https://goo.gl/65cBl1\"></audio>\n    </section>\n  )\n}\n","import { useState, useEffect, useRef } from 'react'\n\nexport const useAccurateInterval = (fn, interval = 1000) => {\n  const [ isRunning, setIsRunning ] = useState(false)\n  const savedCallback = useRef()\n  const timeout = useRef()\n  const expected = useRef()\n  \n  function start() {\n    setIsRunning(true)\n  }\n\n  function stop() {\n    setIsRunning(false)\n  }\n\n  useEffect(() => {\n    savedCallback.current = fn\n  })\n\n  useEffect(() => {\n    function tick() {\n      const drift = Date.now() - expected.current\n\n      savedCallback.current()\n\n      expected.current += interval\n      timeout.current = setTimeout(tick, Math.max(0, interval-drift))\n    }\n\n    if(isRunning) {\n      expected.current = Date.now() + interval\n\n      timeout.current = setTimeout(tick, interval)\n    }\n\n    return () => clearTimeout(timeout.current)\n  }, [isRunning, interval])\n\n  return { \n    timer: { start, stop }\n  }\n}\n","import React from 'react'\nimport { FaMinus, FaPlus } from 'react-icons/fa'\n\nexport const TimerLengthControls = (props) => (\n  <section className=\"timerlength-controls\">\n    <div className=\"break-controls\">\n      <h2 id=\"break-label\">Break Length</h2>\n      <div className=\"controls\">\n        <button id=\"break-decrement\" onClick={props.handleDecrement}>\n          <i><FaMinus /></i>\n        </button>\n        <span id=\"break-length\">{props.breakLength}</span>\n        <button id=\"break-increment\" onClick={props.handleIncrement}>\n          <i><FaPlus /></i>\n        </button>\n      </div>\n    </div>\n    <div className=\"session-controls\">\n      <h2 id=\"session-label\">Session Length</h2>\n      <div className=\"controls\">\n        <button id=\"session-decrement\" onClick={props.handleDecrement}>\n          <i><FaMinus /></i>\n        </button>\n        <span id=\"session-length\">{props.sessionLength}</span>\n        <button id=\"session-increment\" onClick={props.handleIncrement}>\n          <i><FaPlus /></i>\n        </button>\n      </div>\n    </div>\n  </section>\n)","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Timer } from './components/Timer';\nimport { TimerLengthControls } from './components/TimerLengthControls';\n\nconst App = () => {\n  const [breakLength, setBreakLength] = useState(5)\n  const [sessionLength, setSessionLength] = useState(25)\n  const [ isTimerRunning, setIsTimerRunning ] = useState(false)\n\n  function decrement(e) {\n    const elId = e.currentTarget.id\n\n    changeLength(elId, -1)\n  }\n\n  function increment(e) {\n    const elId = e.currentTarget.id\n\n    changeLength(elId, 1)\n  }\n\n  function changeLength(elId, number) {\n    if(isTimerRunning) return\n\n    if(elId.includes('break')) {\n      if((number > 0 && breakLength >= 60) || (number < 0 && breakLength <= 1)) return\n      setBreakLength(breakLength + number)\n    } else if(elId.includes('session')) {\n      if((number > 0 && sessionLength >= 60) || (number < 0 && sessionLength <= 1)) return\n      setSessionLength(sessionLength + number)\n    }\n  }\n\n  function reset() {\n    setSessionLength(25)\n    setBreakLength(5)\n    setIsTimerRunning(false)\n  }\n\n  return (\n    <div className=\"page-wrapper\">\n      <header>\n        <h1>Pomodoro Clock</h1>\n      </header>\n      <TimerLengthControls sessionLength={sessionLength} breakLength={breakLength} handleDecrement={decrement} handleIncrement={increment} />\n      <Timer sessionLength={sessionLength} breakLength={breakLength} isTimerRunning={isTimerRunning} setIsTimerRunning={setIsTimerRunning} handleReset={reset} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}