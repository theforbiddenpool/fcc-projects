{"version":3,"sources":["components/Display.js","components/Controls.js","components/Timer.js","hooks/useAccurateInterval.js","App.js","index.js"],"names":["Display","label","secondsLeft","className","aria-live","id","time","minutes","Math","floor","seconds","formatForPreecidingZero","number","clockify","LengthControl","length","handleChange","data-value","onClick","aria-label","disabled","TimerControls","handleStartStop","isIntervalRunning","handleReset","Timer","useState","breakLength","setBreakLength","sessionLength","setSessionLength","setSecondsLeft","setLabel","beepSound","useRef","fn","interval","isRunning","setIsRunning","savedCallback","timeout","expected","useEffect","current","Date","now","setTimeout","tick","drift","max","clearTimeout","startInterval","stopInterval","useAccurateInterval","isLengthValid","num","currentLength","useLayoutEffect","play","e","parseInt","currentTarget","dataset","value","pause","currentTime","ref","src","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bb255cb.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Display = ({ label, secondsLeft }) => {\n  function clockify(time = secondsLeft) {\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n\n    function formatForPreecidingZero(number) {\n      return (number < 10) ? `0${number}` : number\n    }\n\n    return `${formatForPreecidingZero(minutes)}:${formatForPreecidingZero(seconds)}`\n  }\n\n  return (\n    <div className=\"timer-display\" aria-live=\"polite\">\n      <h2 id=\"timer-label\">{ label }</h2>\n      <p id=\"time-left\">{ clockify(secondsLeft) }</p>\n    </div>\n  )\n}","import React from 'react'\nimport { FaMinus, FaPlus, FaPause, FaPlay, FaUndo } from 'react-icons/fa'\n\nexport const LengthControl = ({ id, label, length, handleChange }) => (\n  <div className=\"length-control\">\n    <h2 id={ `${id}-label` } className=\"control-label\">{ label }</h2>\n    <div className=\"controls\" aria-live=\"polite\">\n      <button data-value=\"-1\" id={ `${id}-decrement` } onClick={ handleChange } aria-label={`decrement`} disabled={(length === 1)}>\n        <i><FaMinus /></i>\n      </button>\n      <span id={ `${id}-length` }>{ length }</span>\n      <button data-value=\"1\" id={ `${id}-increment` } onClick={ handleChange } aria-label={`increment`} disabled={(length === 60)}>\n        <i><FaPlus /></i>\n      </button>\n    </div>\n  </div>\n)\n\nexport const TimerControls = ({ handleStartStop, isIntervalRunning, handleReset }) => (\n  <div className=\"timer-controls\">\n    <button id=\"start_stop\" onClick={ handleStartStop } aria-label={isIntervalRunning ? 'stop timer' : 'start timer'}>\n      <i>\n        { isIntervalRunning ? <FaPause /> : <FaPlay /> }\n      </i>\n    </button>\n    <button id=\"reset\" onClick={ handleReset } aria-label=\"reset timer\">\n      <i><FaUndo /></i>\n    </button>\n  </div>\n)","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react'\n\nimport { useAccurateInterval } from '../hooks/useAccurateInterval'\nimport { Display } from './Display'\nimport { LengthControl, TimerControls } from './Controls'\n\nexport const Timer = () => {\n  const [breakLength, setBreakLength] = useState(5)\n  const [sessionLength, setSessionLength] = useState(25)\n  const [secondsLeft, setSecondsLeft] = useState(sessionLength * 60) // 25 minutes\n  const [label, setLabel] = useState('Session')\n\n  const beepSound = useRef(null)\n  \n  const { startInterval, stopInterval, isIntervalRunning } = useAccurateInterval(() => setSecondsLeft(secondsLeft - 1))\n\n  // I'm using layoutEffect here because otherwise it won't pass the FCC tests\n  useLayoutEffect(() => {\n    if(isIntervalRunning) return\n\n    if(label === 'Session') {\n      setSecondsLeft(sessionLength * 60)\n    } else if(label === 'Break') {\n      setSecondsLeft(breakLength * 60)\n    }\n  }, [sessionLength, breakLength, isIntervalRunning, label])\n\n  function startStop() {\n    if(isIntervalRunning) {\n      stopInterval()\n    } else {\n      startInterval()\n    }\n  }\n\n  function reset() {\n    stopInterval()\n    setLabel('Session')\n    setSecondsLeft(sessionLength * 60)\n    beepSound.current.pause()\n    beepSound.current.currentTime = 0\n    setSessionLength(25)\n    setBreakLength(5)\n  }\n\n  useEffect(() => {\n    if(secondsLeft <= 0) {\n      beepSound.current.play()\n\n      if(label === 'Session') {\n        setSecondsLeft(breakLength * 60)\n        setLabel('Break')\n      } else if(label === 'Break') {\n        setSecondsLeft(sessionLength * 60)\n        setLabel('Session')\n      }\n    }\n  }, [breakLength, label, secondsLeft, sessionLength])\n\n  function isLengthValid(num, currentLength) {\n    return ((num > 0 && currentLength < 60) || (num < 0 && currentLength > 1))\n  }\n\n  function handleBreakChange(e) {\n    if(isIntervalRunning) return\n\n    const num = parseInt(e.currentTarget.dataset.value, 10)\n    if(!isLengthValid(num, breakLength)) return\n    setBreakLength(breakLength + num)\n  }\n  \n  function handleSessionChange(e) {\n    if(isIntervalRunning) return\n\n    const num = parseInt(e.currentTarget.dataset.value, 10)\n    if(!isLengthValid(num, sessionLength)) return\n    setSessionLength(sessionLength + num)\n  }\n  \n  return (\n    <main>\n      <section className=\"timerlength-controls\">\n        <LengthControl id=\"break\" label=\"Break Length\" length={ breakLength } handleChange={ handleBreakChange } />\n        <LengthControl id=\"session\" label=\"Session Length\" length={ sessionLength } handleChange={ handleSessionChange } />\n      </section>\n      <section className=\"timer\" aria-label=\"Timer\">\n        <Display label={ label } secondsLeft={ secondsLeft } />\n        <TimerControls handleStartStop={ startStop } isIntervalRunning={ isIntervalRunning } handleReset={ reset } />\n        <audio ref={beepSound} id=\"beep\" src=\"https://goo.gl/65cBl1\"></audio>\n      </section>\n    </main>\n  )\n}\n","import { useState, useEffect, useRef } from 'react'\n\nexport const useAccurateInterval = (fn, interval = 1000) => {\n  const [ isRunning, setIsRunning ] = useState(false)\n  const savedCallback = useRef()\n  const timeout = useRef()\n  const expected = useRef()\n  \n  useEffect(() => {\n    savedCallback.current = fn\n  })\n\n  useEffect(() => {\n    function tick() {\n      const drift = Date.now() - expected.current\n\n      savedCallback.current()\n\n      expected.current += interval\n      timeout.current = setTimeout(tick, Math.max(0, interval-drift))\n    }\n\n    if(isRunning) {\n      expected.current = Date.now() + interval\n\n      timeout.current = setTimeout(tick, interval)\n    }\n\n    return () => clearTimeout(timeout.current)\n  }, [isRunning, interval])\n\n  return { \n    startInterval: () => setIsRunning(true),\n    stopInterval: () => setIsRunning(false),\n    isIntervalRunning: isRunning,\n  }\n}\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Timer } from './components/Timer';\n\nconst App = () =>  (\n  <div className=\"page-wrapper\">\n    <header>\n      <h1>Pomodoro Clock</h1>\n    </header>\n    <Timer />\n  </div>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}