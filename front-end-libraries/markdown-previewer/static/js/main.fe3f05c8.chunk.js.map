{"version":3,"sources":["components/MovableWindow.js","components/Editor.js","components/Preview.js","App.js","index.js"],"names":["MovableWindow","props","parentContainer","initialMouseX","initialMouseY","useState","isWindowMaximized","setIsWindowMaximized","isMouseDown","setInitialMousePosition","x","y","handleMouseUp","classList","remove","ref","el","className","id","onMouseMove","e","clientX","clientY","style","left","offsetLeft","top","offsetTop","onMouseLeave","onMouseEnter","add","onMouseDown","onMouseUp","title","onClick","toggle","offsetWidth","window","innerWidth","children","Editor","autoFocus","value","text","onChange","handleChange","target","Preview","dangerouslySetInnerHTML","__html","marked","App","textTyped","setTextTyped","ReactDOM","render","document","getElementById"],"mappings":"gQAGaA,EAAgB,SAACC,GAAW,IAGnCC,EAEAC,EACAC,EANkC,EACYC,oBAAS,GADrB,mBAC/BC,EAD+B,KACZC,EADY,KAIlCC,GAAc,EAMZC,EAA0B,SAACC,EAAGC,GAClCR,EAAgBO,EAChBN,EAAgBO,GAGZC,EAAgB,WACpBJ,GAAc,EACdN,EAAgBW,UAAUC,OAAO,WAkCnC,OACE,yBAAKC,IA5Cc,SAACC,GAAD,OAAQd,EAAkBc,GA4CrBC,UAAU,SAASC,GAAIjB,EAAMiB,GAAIC,YA3BxC,SAACC,GAClB,GAAIZ,EAAJ,CAEA,IAAME,EAAIP,EAAgBiB,EAAEC,QACtBV,EAAIP,EAAgBgB,EAAEE,QAE5BpB,EAAgBqB,MAAMC,KAAQtB,EAAgBuB,WAAaf,EAAK,KAChER,EAAgBqB,MAAMG,IAAOxB,EAAgByB,UAAYhB,EAAK,KAE9DF,EAAwBW,EAAEC,QAASD,EAAEE,WAkB6CM,aAAchB,EAAeiB,aAf7F,WAClB3B,EAAgBW,UAAUiB,IAAI,YAe5B,4BAAQC,YAjCY,SAACX,GACvBZ,GAAc,EACdC,EAAwBW,EAAEC,QAASD,EAAEE,UA+BGU,UAAWpB,GAC/C,wBAAIK,UAAU,gBAAgBhB,EAAMgC,OACpC,6BAAShB,UAAU,kBACjB,4BAAQiB,QAfO,SAACd,GACtBb,GAAsBD,GACtBJ,EAAgBW,UAAUsB,OAAO,YAE7BjC,EAAgBkC,YAAclC,EAAgBuB,WAAcY,OAAOC,aACrEpC,EAAgBqB,MAAMC,KAAOa,OAAOC,WAAapC,EAAgBkC,YAAc,QAWxE9B,EAAoB,kBAAC,IAAD,MAAuB,kBAAC,IAAD,SAIhDL,EAAMsC,WC7DDC,EAAS,SAACvC,GAAD,OAClB,kBAAC,EAAD,CAAeiB,GAAG,gBAAgBe,MAAM,UACtC,8BAAUQ,WAAS,EAACC,MAAOzC,EAAM0C,KAAMC,SAAU,SAACxB,GAAD,OAAOnB,EAAM4C,aAAazB,EAAE0B,OAAOJ,QAAQxB,GAAG,a,iBCDxF6B,EAAU,SAAC9C,GAAD,OACnB,kBAAC,EAAD,CAAeiB,GAAG,iBAAiBe,MAAM,aACvC,yBAAKf,GAAG,UAAU8B,wBAAyB,CAACC,OAAQC,IAAOjD,EAAM0C,WC0DxDQ,EAXH,WAAO,IAAD,EACoB9C,mBAjDrB,irCAgDC,mBACR+C,EADQ,KACGC,EADH,KAGhB,OACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,CAAQ0B,KAAMS,EAAWP,aAAcQ,IACvC,kBAAC,EAAD,CAASV,KAAMS,MCvDrBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fe3f05c8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { FaWindowMaximize, FaWindowMinimize } from 'react-icons/fa'\n\nexport const MovableWindow = (props) => {\n  const [isWindowMaximized, setIsWindowMaximized] = useState(false)\n\n  let parentContainer\n  let isMouseDown = false\n  let initialMouseX\n  let initialMouseY\n\n  const setContainer = (el) => parentContainer = el\n  \n  const setInitialMousePosition = (x, y) => {\n    initialMouseX = x\n    initialMouseY = y\n  }\n\n  const handleMouseUp = () => { \n    isMouseDown = false\n    parentContainer.classList.remove('active')\n  }\n\n  const handleMouseDown = (e) => {\n    isMouseDown = true\n    setInitialMousePosition(e.clientX, e.clientY)\n  }\n\n  const moveWindow = (e) => {\n    if(!isMouseDown) return\n\n    const x = initialMouseX - e.clientX\n    const y = initialMouseY - e.clientY\n\n    parentContainer.style.left = (parentContainer.offsetLeft - x) + 'px'\n    parentContainer.style.top = (parentContainer.offsetTop - y) + 'px'\n\n    setInitialMousePosition(e.clientX, e.clientY)\n  }\n\n  const handleFocus = () => {\n    parentContainer.classList.add('active')\n  }\n\n  const maximizeWindow = (e) => {\n    setIsWindowMaximized(!isWindowMaximized)\n    parentContainer.classList.toggle('maximize')\n\n    if((parentContainer.offsetWidth + parentContainer.offsetLeft) > window.innerWidth) {\n      parentContainer.style.left = window.innerWidth - parentContainer.offsetWidth + 'px'\n    }\n\n  }\n\n  return (\n    <div ref={setContainer} className=\"window\" id={props.id} onMouseMove={moveWindow} onMouseLeave={handleMouseUp} onMouseEnter={handleFocus}>\n      <header onMouseDown={handleMouseDown} onMouseUp={handleMouseUp}>\n        <h1 className=\"window-title\">{props.title}</h1>\n        <section className=\"window-actions\">\n          <button onClick={maximizeWindow}>\n            {isWindowMaximized ? <FaWindowMinimize /> : <FaWindowMaximize />}\n          </button>\n        </section>\n      </header>\n      { props.children }\n    </div>\n  )\n}","import React from 'react'\nimport { MovableWindow } from './MovableWindow'\n\nexport const Editor = (props) => (\n    <MovableWindow id=\"editor-window\" title=\"Editor\">\n      <textarea autoFocus value={props.text} onChange={(e) => props.handleChange(e.target.value)} id=\"editor\"></textarea>\n    </MovableWindow>\n  )","import React from 'react'\nimport marked from 'marked'\nimport { MovableWindow } from './MovableWindow'\n\nexport const Preview = (props) => (\n    <MovableWindow id=\"preview-window\" title=\"Previewer\">\n      <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(props.text)}}></div>\n    </MovableWindow>\n  )","import React, { useState } from 'react'\nimport './App.scss'\nimport { Editor } from './components/Editor'\nimport { Preview } from './components/Preview'\n\nconst placeholder = `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\nconst App = () => {\n  const [ textTyped, setTextTyped ] = useState(placeholder)\n\n  return (\n    <div className=\"App\">\n      <Editor text={textTyped} handleChange={setTextTyped} />\n      <Preview text={textTyped} />\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}